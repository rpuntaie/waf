#! /usr/bin/env python
# encoding: utf-8
# Roland Puntaier, 2017

#from Variant.py..
"""If there is a *variants* variable in the main wscript

- x_variant commandline arguments are created
  for x in {configure, build, clean, install, uninstall}
- an x command line argument is expanded to all x_variant's 
- the associated x function context contains :py:const:`variant`

Variant strings can use the `/` path separator to produce an according output tree.

"""

from itertools import product as prod
from string import Template
import time
import os

variants = ['/'.join(v) for v in prod('Tim Jan'.split(),'X Y'.split())]

def touch(x,txt=''):
	with open(x,'w') as f:
		f.write(txt)

def filltime(tsk):
	ifn = tsk.inputs[0].abspath()
	ofn = tsk.outputs[0].abspath()
	with open(ifn,'r') as f:
		s = f.read()
	with open(ofn,'w') as f:
		f.write(time.strftime(Template(s).substitute(tsk.env),time.localtime()))

asrc = 'tst.txt.tm'
atgt = os.path.splitext(asrc)[0]
def init(ini):
	touch(asrc,'$name, it is %$timeformat.')#Template,then strftime

def configure(cfg):
	v = cfg.variant
	cfg.env.name,cfg.env.timeformat = v.split('/')
	if 'Tim' in v:
		cfg.env.name = 'Timi'

def build(bld):
	v=bld.variant
	bld(rule=lambda t:filltime(t),source=asrc,target=atgt)

def clean(cln):
	pass


